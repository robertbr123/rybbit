services:
  clickhouse:
    container_name: clickhouse
    image: clickhouse/clickhouse-server:25.4.2
    ports:
      - "8123:8123"
      - "9005:9005"
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./clickhouse_config:/etc/clickhouse-server/config.d
    environment:
      - CLICKHOUSE_DB=analytics1
      - CLICKHOUSE_USER=frog1
      - CLICKHOUSE_PASSWORD=frog1
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  postgres:
    image: postgres:17.4
    container_name: postgres
    environment:
      - POSTGRES_USER=frog1
      - POSTGRES_PASSWORD=frog1
      - POSTGRES_DB=analytics1
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    image: ghcr.io/rybbit-io/rybbit-backend:${IMAGE_TAG:-latest}
    container_name: backend
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - CLICKHOUSE_HOST=http://clickhouse:8123
      - CLICKHOUSE_DB=analytics1
      - CLICKHOUSE_PASSWORD=frog1
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=analytics1
      - POSTGRES_USER=frog1
      - POSTGRES_PASSWORD=frog1
      - BETTER_AUTH_SECRET=insecure-secret
      - BASE_URL=https://analytics.ondeline.cloud
      - DISABLE_SIGNUP=false
    depends_on:
      clickhouse:
        condition: service_healthy
      postgres:
        condition: service_started
    restart: unless-stopped

  client:
    image: ghcr.io/rybbit-io/rybbit-client:${IMAGE_TAG:-latest}
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URL: https://analytics.ondeline.cloud
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BACKEND_URL=https://analytics.ondeline.cloud
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  clickhouse-data:
  postgres-data:
